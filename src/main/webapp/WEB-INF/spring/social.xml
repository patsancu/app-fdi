<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:facebook="http://www.springframework.org/schema/social/facebook"
	xmlns:twitter="http://www.springframework.org/schema/social/twitter"
	xmlns:social="http://www.springframework.org/schema/social"
	xmlns:linkedin="http://www.springframework.org/schema/social/linkedin"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/social/facebook http://www.springframework.org/schema/social/spring-social-facebook.xsd
		http://www.springframework.org/schema/social/linkedin http://www.springframework.org/schema/social/spring-social-linkedin.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/social/twitter http://www.springframework.org/schema/social/spring-social-twitter.xsd
		http://www.springframework.org/schema/social http://www.springframework.org/schema/social/spring-social.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">


<!-- 	<context:property-placeholder location="classpath:/org/springframework/social/showcase/config/application.properties" /> -->

<!-- 	<facebook:config app-id="${facebook.clientId}" app-secret="${facebook.clientSecret}" app-namespace="socialshowcase" /> -->
<!-- 	<twitter:config app-id="${twitter.consumerKey}" app-secret="${twitter.consumerSecret}"/> -->
<!-- 	<linkedin:config app-id="${linkedin.consumerKey}" app-secret="${linkedin.consumerSecret}"/> -->

<!-- 	<social:jdbc-connection-repository/>	 -->
	<bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource" />
	
	<bean id="usersConnectionRepository" class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
	    <constructor-arg ref="rootDataSource" />
	    <constructor-arg ref="connectionFactoryLocator" />
	    <constructor-arg ref="textEncryptor" />
	</bean>
	
	<bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<property name="connectionFactories">
			<list>
				<bean class="org.springframework.social.twitter.connect.TwitterConnectionFactory">
					<constructor-arg value="${cfg.twitter.consumerKey}" />
					<constructor-arg value="${cfg.twitter.consumerSecret}" />				
				</bean>
			</list>
		</property>
	</bean>

 	<bean id="connectController" class="org.springframework.social.connect.web.ConnectController" autowire="constructor">
		<property name="connectInterceptors">
			<list>
<!-- 				<bean class="org.springframework.social.showcase.facebook.PostToWallAfterConnectInterceptor" /> -->
<!-- 				<bean class="org.springframework.social.showcase.twitter.TweetAfterConnectInterceptor" /> -->
			</list>
		</property>
	</bean>
	
	<bean id="psc" class="org.springframework.social.connect.web.ProviderSignInController" autowire="constructor" />		
<!-- 	<bean id="signInAdapter" class="org.springframework.social.showcase.signin.SimpleSignInAdapter" autowire="constructor" /> -->
	
<!-- 	<bean id="disconnectController" class="org.springframework.social.facebook.web.DisconnectController"  -->
<!-- 		c:_0-ref="usersConnectionRepository" c:_1="${facebook.clientSecret}" /> -->

	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" 
		factory-method="noOpText" />
</beans>
